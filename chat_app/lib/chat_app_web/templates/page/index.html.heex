<!DOCTYPE html>
<html>
  <head>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
    <meta charset="utf-8">
    <title>Ambrose Chat</title>
    <style>
      /* Chat window styles */
      .chat-window {
        position: fixed;
        bottom: 20px;
        right: 20px;
        width: 350px;
        height: 500px;
        border: 1px solid #ccc;
        border-radius: 5px;
        overflow: hidden;
        font-family: sans-serif;
      }

      .chat-header {
        background-color: #fff;
        padding: 10px;
        border-bottom: 1px solid #ccc;
      }

      .chat-messages {
        height: 400px;
        overflow-y: scroll;
        padding: 10px;
      }

      .chat-message {
        background-color: #f2f2f2;
        padding: 6px;
        margin-bottom: 10px;
        border-radius: 5px;
      }

      .chat-form {
        position : relative;
      }

      .chat-form div {
        display: flex;
        padding: 6px;
        background-color: #fff;
        border-top: 1px solid #ccc;
      }

      div .chat-input {
        flex: 1;
        margin-right: 10px;
        padding: 5px;
        border: none;
        border-radius: 5px;
        box-shadow: inset 0 1px 2px rgba(0, 0, 0, .1);
      }

      div .chat-submit {
        display: flex;
        justify-content: center;
        align-items: center;
        width: 70px;
        padding: 5px 10px;
        border: none;
        border-radius: 5px;
        background-color: #007bff;
        color: #fff;
        font-weight: bold;
      }

      .chat-submit i {
        margin: 0;
      }

      li {
        cursor: pointer;
        padding: 5px 10px;
        margin-bottom: 0px;
      }

      .chat-autocomplete li:hover {
        background:#f2f2f2;
      }

      .chat-autocomplete {
        position: absolute;
        height: auto;
        max-height: 100px;
        overflow-y: scroll;
        list-style: none;
        padding: 0;
        margin: 0;
        width: 100%;
        bottom: 65px;
        background-color: #fff;
        border: 1px solid #ccc;
        border-radius: 5px;
        box-shadow: 0 1px 2px rgba(0, 0, 0, .1);
        z-index: 1;
      }

    </style>
  </head>
  <body>
    <div class="chat-window">
      <div class="chat-header">Ambrose Chat</div>
      <div class="chat-messages" id="messages"></div>
      <form class="chat-form" id="message-form">
          <ul class="chat-autocomplete" id="suggestions"></ul>
          <div>
            <input type="text" class="chat-input" autocomplete="off" id="autocomplete-input" placeholder="Type your message...">
            <button type="submit" class="chat-submit"><i class="fas fa-paper-plane fa-lg"></i></button>
          </div>
      </form>


    </div>
    <script>
      window.onload = function() {
        const users = [];

        let autocompleteInput = document.getElementById("autocomplete-input")
        let messageForm = document.getElementById("message-form")
        let messagesContainer = document.getElementById("messages")

        autocompleteInput.addEventListener("input", function() {
          if (autocompleteInput.value.indexOf("@") !== -1) {
            let targetUserName = autocompleteInput.value.substring(autocompleteInput.value.lastIndexOf("@") + 1);
            let suggestions = getUsersPossibilities(targetUserName, users);

            appendInList(suggestions);
          } else {
            cleanList();
          }
        })

         autocompleteInput.addEventListener("keydown", function(e) {
          if (e.code === "Tab") {
            e.preventDefault();
            let target = actualList[0];
            if (target === undefined)
              return;
            const index = autocompleteInput.value.lastIndexOf('@');
            let newText = autocompleteInput.value.slice(0, index + 1) + target.name;
            autocompleteInput.value = newText;
            cleanList();
          } else if (e.code === "Backspace") {
            let targetUserName = autocompleteInput.value.substring(autocompleteInput.value.lastIndexOf("@") + 1);
            if (targetUserName.length === 0) {
              cleanList();
            } else {
              let suggestions = getUsersPossibilities(targetUserName, users);
              appendInList(suggestions);
            }
          }
        })

        messageForm.addEventListener("submit", e => {
          e.preventDefault();
          window.channel.push("shout", { body: autocompleteInput.value });
          autocompleteInput.value = "";
          cleanList();
        })

        window.channel.on("user:entered", payload=>{
          users.push({name:payload.nickname, id:payload.nickname });
        })

        window.channel.on("shout", payload => {
          let messageItem = document.createElement("div");
          messageItem.classList.add("chat-message");
          console.log(payload);
          messageItem.innerHTML = "<span style='font-weight: bold'>" + payload.nickname + ": </span>" + payload.message.body;
          messagesContainer.appendChild(messageItem);
          messagesContainer.scrollTop = messagesContainer.scrollHeight;
        })


        const listFather = document.getElementById("suggestions");
        let targetUserName = "";
        let actualList = [];

        function getUsersPossibilities(input, array) {
          if (!input.trim())
            return array;
          return array.filter(x => x.name.toLowerCase().startsWith(input.toLowerCase()));
        }

        function appendInList(items) {
          cleanList();
          for (let item in items) {
            let newLi = document.createElement("li");
            newLi.appendChild(document.createTextNode(items[item].name));
            listFather.appendChild(newLi);
          }
          actualList = items;
        }

        function cleanList() {
          listFather.innerHTML = "";
          actualList = [];
        }
      }
    </script>
  </body>
</html>
